import binascii
import math
import pickle
from decimal import *

from gym_malware.envs.utils import interface


def createArffgram(filename):
    with open('threedict.dat', 'rb') as f:
        fe = pickle.load(f)

    fh = open(filename, 'rb')
    first = ""
    second = ""
    three = ""
    result = {}

    content = fh.read(1)
    while len(content) > 0:
        line = binascii.b2a_hex(content).upper()

        if three == "":
            three = line
        elif second == "":
            second = three
            three = line
        else:
            first = second
            second = three
            three = line
            tmp = first + second + three
            if tmp in result:
                result[tmp] += 1
            else:
                result[tmp] = 1
        content = fh.read(1)

    maxterm = 0
    for k, v in result.items():
        print("{}->{}".format(k.decode('utf-8'), v))
        if (v > maxterm):
            maxterm = v

    print(maxterm)

    print("==============")

    for k, v in fe.items():
        print("{}->{}".format(k, v))
        if k in result:
            print(round(((Decimal(result[k]) / Decimal(maxterm)) * Decimal(
                math.log(Decimal(21648) / Decimal(1 + fe[k])))) * Decimal(1000000), 1))
            # else:
            # print(0)


filename = interface.get_sample_real_path("Backdoor.Win32.Hupigon.zay")
createArffgram(filename)
